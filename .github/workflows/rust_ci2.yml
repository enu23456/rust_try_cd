# We could use `@actions-rs/cargo` Action ability to automatically install `cross` tool
# in order to compile our application for some unusual targets.

on: [push, pull_request]

name: Build_and_Release

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - armv7-unknown-linux-gnueabihf
          # - powerpc64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      # - run: |
      #     ls -al
      #     cd target/${{ matrix.target }}/release/
      #     ls -al
      - uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/rust_try_cd

  draft-release:
    name: Release Draft
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2.3.4

      # Remove old release drafts by using the curl request for the available releases with draft flag
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            | tr '\r\n' ' ' \
            | jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' \
          curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/{}
          
      - name: Set current time
        id: version
        run: echo "::set-output name=text::ver$(TZ=Asia/Tokyo date +%y%m%d%H%M)"
        # run: echo "::set-output name=text::v1-$(TZ=Asia/Tokyo date +%Y%m%d-%H%M%S)"
      - name: Create a draft release
        uses: actions/create-release@v1
        id: createDraftRelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.text }}  # 一通りをまず完成させるために変更
          # tag_name: ${{ needs.build.outputs.version }}
          release_name: ${{ steps.version.outputs.text }}
          # release_name: ${{ needs.build.outputs.version }}  # 一通りをまず完成させるために変更
          # body: |
          #   ## Changelog
          #   - [ ]
          draft: true
          prerelease: false
      - name: Save upload url of this draft release.
        run: |
          echo '${{ steps.createDraftRelease.outputs.upload_url }}' > release_upload_url.txt
      - name: Upload `release_upload_url.txt`
        uses: actions/upload-artifact@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: draft-release
          path: release_upload_url.txt
