# We could use `@actions-rs/cargo` Action ability to automatically install `cross` tool
# in order to compile our application for some unusual targets.

on: # [push, pull_request]
    workflow_dispatch:

name: try_Build

jobs:
  build:
    name: Build
    
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
            
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Setup code
        uses: actions/checkout@v2

      - name: Install musl tools
        if : matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt install -qq -y musl-tools --no-install-recommends
          
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      #     
      # - name: Check Directory
      #   if: matrix.target == 'x86_64-pc-windows-msvc'
      #   run: |
      #     dir
      #     cd target/${{ matrix.target }}/release/
      #     dir
      
      - name: Package for linux-musl
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          zip --junk-paths rust_try_cd-${{ matrix.target }} target/${{ matrix.target }}/release/rust_try_cd

      - name: Package for windows
        if: matrix.target == 'x86_64-pc-windows-msvc'
        run: |
          powershell Compress-Archive -Path target/${{ matrix.target }}/release/rust_try_cd.exe -DestinationPath rust_try_cd-${{ matrix.target }}.zip

      - name: Package for macOS
        if: matrix.target == 'x86_64-apple-darwin'
        run: |
          zip --junk-paths rust_try_cd-${{ matrix.target }} target/${{ matrix.target }}/release/rust_try_cd
          
      - name: Check Directory
        if: matrix.target == 'x86_64-pc-windows-msvc'
        run: |
          dir
          
      - uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.target }}
          path: rust_try_cd-${{ matrix.target }}.zip
